name: Xcepto Java release pipeline
on:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: |
          docker compose build

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: ./gradlew test

  versions:
    runs-on: ubuntu-latest
    name: Determine Versions
    needs: [ tests ]

    outputs:
      VERSION: ${{ steps.set-versions.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Set up environment
        id: set-versions
        shell: bash
        run: |
          echo "VERSION=1.0.${{ github.run_number }}" >> "$GITHUB_OUTPUT"
          echo "VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create a new tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "${{ github.run_number }}"
          git push origin "${{ github.run_number }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release v${{ env.VERSION }}
          body: |
            No release notes
          draft: false
          prerelease: false

  publish:
    needs: [ tests, versions ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - xceptoj

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run Build
        run: |
          ./gradlew ${{ matrix.project }}:test

      - name: Run Publish to PreDeploy
        run: |
          NAME="${{ matrix.project }}"
          ./gradlew ${{ matrix.project }}:publish${NAME^}PublicationToPreDeployRepository

      - name: Run JReleaser Deploy
        run: |
          ./gradlew ${{ matrix.project }}:jreleaserDeploy
        env:
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USER }}
          JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}