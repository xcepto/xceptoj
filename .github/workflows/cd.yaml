name: Xcepto Java release pipeline
on:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: |
          docker compose build

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: ./gradlew test

  versions:
    runs-on: ubuntu-latest
    name: Determine Versions
    needs: [ tests ]

    outputs:
      VERSION: ${{ steps.set-versions.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Set up environment
        id: set-versions
        shell: bash
        run: |
          echo "VERSION=2.0.${{ github.run_number }}" >> "$GITHUB_OUTPUT"
          echo "VERSION=2.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create a new tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "${{ github.run_number }}"
          git push origin "${{ github.run_number }}"

  publish-xceptoj:
    needs: [ tests, versions ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - xceptoj

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run Build
        run: |
          ./gradlew ${{ matrix.project }}:test
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}

      - name: Run Publish to PreDeploy
        run: |
          NAME="${{ matrix.project }}"
          NAME="${NAME^}" # Capitalize first letter
          NAME="${NAME//-/_}" # Replace dash with underscore
          ./gradlew ${{ matrix.project }}:publish${NAME}PublicationToPreDeployRepository
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}

      - name: Run JReleaser Deploy
        run: |
          ./gradlew ${{ matrix.project }}:jreleaserDeploy
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USER }}
          JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  publish-adapters:
    runs-on: ubuntu-latest
    needs: [publish-xceptoj]

    strategy:
      matrix:
        project:
          - xceptoj.rabbitmq

    steps:
      - name: Wait until xceptoj is available
        run: |
          for i in {1..30}; do
            if curl --head --silent \
              "https://repo.maven.apache.org/maven2/org/xcepto/xceptoj/${{ needs.versions.outputs.VERSION }}/xceptoj-${{ needs.versions.outputs.VERSION }}.pom" \
              | grep "200 OK" > /dev/null; then
              echo "Xceptoj is available"
              exit 0
            fi
            echo "Waiting for Maven Central..."
            sleep 10
          done
          echo "Timed out waiting for xceptoj availability"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run Build
        run: |
          ./gradlew ${{ matrix.project }}:test
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}

      - name: Run Publish to PreDeploy
        run: |
          NAME="${{ matrix.project }}"
          NAME="${NAME^}" # Capitalize first letter
          NAME="${NAME//-/_}" # Replace dash with underscore
          ./gradlew ${{ matrix.project }}:publish${NAME}PublicationToPreDeployRepository
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}

      - name: Run JReleaser Deploy
        run: |
          ./gradlew ${{ matrix.project }}:jreleaserDeploy
        env:
          VERSION: ${{ needs.versions.outputs.VERSION }}
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USER }}
          JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

  create-release:
    needs: [publish-xceptoj, publish-adapters, versions]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release v${{ needs.versions.outputs.VERSION }}
          body: |
            [https://central.sonatype.com/namespace/org.xcepto](https://central.sonatype.com/namespace/org.xcepto)
          draft: false
          prerelease: false